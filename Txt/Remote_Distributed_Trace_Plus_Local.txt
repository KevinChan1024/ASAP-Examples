!!++
!! REMOTE_DISTRIBUTED_TRACE_PLUS_LOCAL.INR
!! Title: Using Remote to Trace on 4 Computers
!! Category: Simple Problem
!! Keywords: Tracing, Remote, $GUI, $SCR, Tracing, SEED
!! Description: This example is based on the Remote_Distributed_Trace.inr
!! which runs a trace on 3 remote machines, but adds a fourth run
!! on the local machine.  It shows how to set up a trace
!! across all four machines using a different starting 
!! SEED value.  This produces four random traces of the same
!! optical system occuring at the same time and thereby
!! reducing the total raytrace time by one fourth. The sources
!! for each are set to 1/4 of the combined total because they will
!! be summed up at the end. The SPOTS results from the 3 Remotes
!! are transfered back to the local machine where they are COMBINEd
!! and finally added to the local trace results. 
!! An Integrating Sphere model was chosen since this generally
!! requires many rays to trace properly. 
!! Please make sure to set up the Remote Configuration as per
!! instructions found at our Knowledge base for each computer.
!! A dialog will ask for the names of the 3 Remote computers, 
!! number of rays and total flux desired. 
!! Edit History: (latest first) 
!! 10/10/2013 - gb - replaced command abbreviations with proper form
!! 09/05/2012 - cp - fixed macro names & header
!! 07/23/2012 - cp - fixed remote directory to work with both XP and Win 7
!! 02/29/2012 - cp - updated SEED macros to match latest SET_SEED Template
!! 12/03/2010 - cp - revised for 2010 compatibility 
!! 06/17/2009 - cp - removed deletion of tmp files
!! 05/27/2009 - cp - added latest random SEED generator
!! 03/13/2009 - cp - added local run
!! 02/25/2009 - cp - creation
!!--

!! Reset the system

SYSTEM NEW
RESET

$ECHO NONE
!! Initialize variables
C1="TUT2"  C2="TUT3"  C3="TUT4" N1="1000" F1="10" 

!! N1=10000 == 20M RAYS per trace due to scatter
PI=4*ATAN(1)
RSCAT=.9 !! Lambertian reflectance
PORT_R=24 !! Port radius
SPHERE_R=300  !! Sphere radius   
SCR_CANCEL=1 !! Allows cancelling of window & terminating demo

$SCR 17 !! The following 16 lines will appear in a dialog box
This file demonstrates how to use the Remote feature of ASAP to
distribute a trace of an optical system across three computers.
A different SEED value is used for each computer and the results
are returned to the local machine to be COMBINEd into one
distribution file and analyzed.

There must be three other computers on the network available with
the same version of ASAP installed. Each must be set up according 
to the Remote setup document at our Knowledge base. 

After filling in the following parameters carefully, choose YES
to proceed, otherwise hit CANCEL. (No backslashes necessary)
Name of computer 1: \C1"                        ? 
Name of computer 2: \C2"                        ? 
Name of computer 3: \C3"                        ? 
Total Number of rays:   \N1"      ? 
Total Flux of Source    \F1"      ?
 
$IF (SCR_CANCEL) EQ 1; $GO usercancel !! Tests for Cancel button hit
SCR_CANCEL=1 !! Because SCR dialog sets this to 0 if OK is hit 

!! The following macros are for generating a random seed on each remote session:
*************** 
!!create macro to act as random delay timer
COUNTER_SPHERE {
  $LOC N; N=0    !! create local variable 
  $RAN DEC
  $DO 1 INT(1001~10001)    !! counter timer
    N=N+1
}

!! set SEED value by adding up multiple $TICS
SET_SEED_SPHERE {  
  $ECHO NONE
  SYSTEM NEW; RESET  
  $LOC SEED_NUMBER TOT_TIME STEP_TIME  !! create local variables
  TOT_TIME=0                           !! initialize total time variable
                                          
  &TIC                                 !! reset TIC timer
  $DO 1 21                             !! Do loop to add multiple $TIC values
    {                                     
     &COUNTER_SPHERE                          !! call Counter macro
     $ECHO ALL                            
     $TIC MILI                         !! get $TIC time in msec
     $GRAB '$TIC' 1 1 STEP_TIME        !! grab $TIC value
     $ECHO NONE                           
     TOT_TIME=TOT_TIME+(STEP_TIME)     !! add $TIC value to total time variable
     }                                    
                                          
  $RAN INT(TOT_TIME*123457)            !! initialize $RAN value
  SEED_NUMBER=INT(2000001~20000010)    !! use $RAN to compute SEED value        
  SEED (SEED_NUMBER)                   !! set SEED value
  $GUI CLEARALL                        !! clear Output window
  $ECHO ALL                               
  $REG SEED_NUMBER TOT_TIME            !! show SEED and total time values
}          
***************  

!! Before remote session starts
!! Define a macro that will only contain the geometry of the system
INT_SPHERE {
  $SET_SEED_SPHERE !! Generate random starting seed
  UNITS MM 'Watts' 
  HALT 10000 1E-30
  CUTOFF 1E-30 10000
  LEVEL 200 
  RSCAT=1.0 !! Lambertian reflectance
  PORT_R=24 !! Port radius
  SPHERE_R=300  !! Sphere radius   

  MODEL
    LAMBERTIAN (RSCAT) 
  
  EDGES  !! Edge 1
    ELLIPSE Z SPHERE_R*.983 2@(PORT_R) 64 !! Importance edge
    SMOOTH
  OBJECT 'DETECTOR'
  
  SURFACES
    ELLIPSOID 3@(PORT_R) -SPHERE_R-30 0 0 -X
    OBJECT 'LAMP_BACK'
    INTERFACE 1 0 AIR AIR
      
  SURFACES  !! To create exit port
    TUBE Z 280 2@(PORT_R) SPHERE_R+30 2@(PORT_R)  
    
  SURFACES  !! Lamp housing - entrance port
    TUBE X -280 2@(PORT_R) -SPHERE_R-30 2@(PORT_R) 
  
  SURFACES
    ELLIPSOID 3@(SPHERE_R) 3@0
    OBJECT 'SPHERE'
    BOUNDS .2 .3  !! Make 2 holes 90° apart
      SCATTER MODEL 1 RANDOM .9 1
        TOWARDS EDGE 1 10  !! 10 rays scattered toward edge
        
  OBJECT; .2 'LAMP_HOUSING'
    INTERFACE 1 0 AIR AIR
    BOUNDS .1  !! Trim to sphere
    
  EMITTING SPHEROID -330 0 0 3@10 #1  !! Increase rays for more accuracy
    FLUX TOTAL #2/4 !! Desired flux divided by number of computer runs
  
  TRACE
  CONSIDER ONLY DETECTOR
  SELECT ONLY SOURCE -1  !! May use to eliminate direct rays
  WINDOW Y -2@(PORT_R) X -2@(PORT_R)
  PIXELS 201 
  STATS
  SPOTS POSITION ATTRIBUTE 0
  DISPLAY
  WRITE SPOTS_RESULT DIS
  RETURN
}

!! Create a macro that will do the raytrace and make the 
!! distribution files:

TRACE_REMOTE { 

  !! Start remote sessions on all 3 computers
  $GUI REMOTESTART #1 "C:\USERS\PUBLIC\REMOTE_SESSION\" 
  $GUI REMOTESTART #2 "C:\USERS\PUBLIC\REMOTE_SESSION\" 
  $GUI REMOTESTART #3 "C:\USERS\PUBLIC\REMOTE_SESSION\" 
  

  !! Send all necessary files to remote computers 
  $GUI REMOTESENDFILE #1 "*_SPHERE.MAC"
  $GUI REMOTESENDFILE #2 "*_SPHERE.MAC"
  $GUI REMOTESENDFILE #3 "*_SPHERE.MAC"
                  
  !! Run the file that traces with different SEED
  $GUI REMOTECOMMAND #1 $INT_SPHERE #4 #5 !! #4=#Rays, #5=Flux
  $GUI REMOTECOMMAND #2 $INT_SPHERE #4 #5
  $GUI REMOTECOMMAND #3 $INT_SPHERE #4 #5
                                                           
  !! Wait for all computers to be complete before exporting
  !! newly created display files

  STATUS1=0      !! Status of computer 1
  STATUS2=0      !! Status of computer 2
  STATUS3=0      !! Status of computer 3  
 
  !! Run a copy locally (For 4 runs total)
  $ECHO !! Allows $GRAB to work on $TIC
  $INT_SPHERE #4 #5
  
  !! Then continue to check that Remote runs are finished:
  !! Use a $DO loop to repeatedly wait until the last computer
  !! is finished processing
  
  $ECHO NONE 
  $DO 1 1000
  {
    !! Check the status of the last computer that is being issued commands
    $GUI REMOTEBUSY #1 STATUS1 
    $GUI REMOTEBUSY #2 STATUS2
    $GUI REMOTEBUSY #3 STATUS3
        
    !! Status of 1 means computer is still busy
    !! Status 0f 0 means computer is finished computing
    
    !! If any of the computers are still busy, wait 5 seconds and check again
    $IF (STATUS3) EQ 1 OR (STATUS2) EQ 1 OR (STATUS1) EQ 1  
    	$WAIT 5 
    !! If all computer are finished processing, leave the $DO loop and continue
    $IF (STATUS1) EQ 0 AND (STATUS2) EQ 0 AND (STATUS3) EQ 0
    	$LEAVE !! Exit $DO loop and continue with macro
  }         
  $ECHO ALL

  
  !! Send the desired dis files back to the Local computer
  $GUI REMOTEGETFILE #1 "SPOTS_RESULT.DIS" 
  DISPLAY "#1\SPOTS_RESULT.DIS" !! #1 is folder in Local Working Directory 
    WRITE SUM DIS  !! Write first dist. to SUM.DIS
  RETURN 
  $GUI REMOTEGETFILE #2 "SPOTS_RESULT.DIS"
  DISPLAY "#2\SPOTS_RESULT.DIS" !! #2 is folder in Local Working Directory 
    COMBINE SUM 1.0  !! Add SUM.DIS to current dist. file
    WRITE SUM DIS    !! Write current dist. file back to SUM.DIS         
  RETURN 
  $GUI REMOTEGETFILE #3 "SPOTS_RESULT.DIS" 
  DISPLAY "#3\SPOTS_RESULT.DIS" !! #3 is folder in Local Working Directory
    COMBINE SUM 1.0  !! Add SUM.DIS to current dist. file
    WRITE SUM DIS    !! Write current dist. file back to SUM.DIS
  RETURN  
  !! End the remote session
 $GUI REMOTEEND #1
 $GUI REMOTEEND #2
 $GUI REMOTEEND #3

  ***** END OF REMOTE SESSION ***********

 RETURN
}

$TIC
 
$TRACE_REMOTE C1" C2" C3" N1" F1" !! Arguments must be transferred as literals to remote sessions

!! Perform analysis of combined display file at local machine: 
DISPLAY "SPOTS_RESULT.DIS" !! Display Local results
  COMBINE SUM 1.0  !! Add combined Remote results from above to current distribution
  WRITE SUM DIS    !! Write current dist. file back to SUM.DIS for safe keeping
  AVERAGE 
  CONTOUR 10 TICS
  PICTURE 
RETURN
$TIC !! Total time of remote runs with analysis
$GRAB 'TOTAL' 0 1 E_FLUX  !! Get Exit Power
$ECHO NONE
&REG 'Flux at Exit Port =' E_FLUX 
!! Example of alternate method of listing arguments when $SCR not used:
!!$TRACE_REMOTE TUT12 TUT13 TUT14 10000 10

usercancel !! Label used for a user Cancel from first $SCR
$ECHO
RETURN