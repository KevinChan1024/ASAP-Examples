!!++
!! Backlight_Explicit_01.INR
!! Title: An Explicit Non-Unit-Cell Backlight System
!! Category: Simple Problem
!! Keywords: Geometry, backlight, lightguide, bumps, led, ARRAY
!! Description: A discretely made backlight system with bumps
!! on the bottom of a lightguide. The effective size of the bumps
!! (packing fraction) increases toward the end of the lightguide. 
!! Identical geometry to the example MICROSTRUCTURE_01.INR for
!! raytrace speed comparison. 
!! Edit History: (latest first)
!! 10/10/2013 - gb - replaced command abbreviations with proper form
!! 06/04/2013 - cp - added header and formatted
!! 05/01/2013 - rs - creation
!!--

SYSTEM NEW
RESET 
NRAYS=100000	!! number of initial rays traced from each LED
BUMPRAD=.3	  !! Radius of the bumps
PIT=2		      !! Pitch of the bumps

!! Define a function named "SFAC" that scales the size of the bumps as a function of
!! position on the lightguide.
!! The variable "_" represents the global X coordinate in the scaling function.
A=1
$FCN SFAC 1+A*_/100

!! System units
UNITS MM

!! Define refractive indices and names for the optical materials.
MEDIA
  1.586 'POLYCARB'
  1.52 'EPOXY'
RETURN

!!=============================================
!! Define the geometry of the backlight display
!!=============================================

!! Top of the lightguide
SURFACES
  PLANE Z 0 RECT 50
    SHIFT 50 0 0
OBJECT 'TOP'
  INTERFACE COAT BARE AIR POLYCARB
  REDEFINE COLOR 3
RETURN

!! Entrance face of the lightguide
SURFACES
  PLANE X 0 RECT 50 5
    SHIFT 0 0 -5
OBJECT 'ENT'
  INTERFACE COAT BARE AIR POLYCARB
  REDEFINE COLOR 11
RETURN

!! Sides of the lightguide
SURFACES
  PLANE Z -10 
    ROTATE Y -2.862405 -10 0
  PLANE Y -50 RECT 5 50
    SHIFT 50 0 -5
OBJECT 'SIDEMY'
  INTERFACE COAT BARE AIR POLYCARB
  BOUNDS .2
  REDEFINE COLOR 11
RETURN

SURFACES
  PLANE Z -10 
    ROTATE Y -2.862405 -10 0
  PLANE Y 50 RECT 5 50
    SHIFT 50 0 -5
OBJECT 'SIDEPY'
  INTERFACE COAT BARE AIR POLYCARB
  BOUNDS .2
  REDEFINE COLOR 11
RETURN

!! End of the lightguide
SURFACES
  PLANE X 100 RECT 50 2.5
    SHIFT 0 0 -2.5
OBJECT 'END'
  INTERFACE COAT BARE AIR POLYCARB
  REDEFINE COLOR 11
RETURN

!! "MAKBOT" is an ASAP macro that defines a planar
!! strip with holes in it where the bumps go.
MAKBOT {
  X=PIT/2+(#1-1)*PIT
  SURFACES
    TUBE Z -1 2@(BUMPRAD*SFAC(X)) 1 2@(BUMPRAD*SFAC(X))
      ARRAY 0 1 0 0, INT(100/PIT) 0 (PIT) 0 BOUNDS
        SHIFT 0 -50+PIT/2 0
    PLANE Z 0 REC PIT/(2*COS[2.862405]) 50 
  OBJECT 'BOT.#1'
    BOUNDS +.2
    SHIFT -50+PIT/2+(#1-1)*PIT 0 0
    SHIFT 50/COS[2.862405] 0 -10
    ROTATE Y -2.862405 -10 0
    INTERFACE COAT BARE AIR POLYCARB
    FACETS 101 101
    REDEFINE COLOR 3
  RETURN
}

!! Loop that calls the macro "MAKBOT" to define
!! a series of planar strips with holes in them
!! where the bumps will go.
&DO 1 INT(100/PIT)
  {
  $MAKBOT |
  }

!! "MAKROW" is a macro that defines a row of bumps
MAKROW {
$DO 1 INT(100/PIT)
  {
  X=PIT/2+(#1-1)*PIT
  SURFACES
    PLANE Z 0
    ELLIPSOID 3@(BUMPRAD*SFAC(X)), 3@0
  OBJECT 'DOT.#1.?'
    BOUNDS .2
    SHIFT -50+PIT/2+(#1-1)*PIT -50+PIT/2+(?-1)*PIT 0
    SHIFT 50/COS[2.862405] 0 -10
    ROTATE Y -2.862405 -10 0
    INTERFACE COAT BARE AIR POLYCARB
    REDEFINE COLOR 1
  RETURN
  }
}

!! Loop that calls the macro "MAKROW" to define
!! rows of bumps
&DO 1 INT(100/PIT)
  {
  MAKROW |
  }

!! Reflectors that direct light from the leds into the lightguide
SURFACES
  PLANE X 0 RECT 50 2
    SHIFT 0 0 2
    ROTATE Y 50 0 0
    SHIFT -3.1 0 -5
    SHIFT 0 0 2
OBJECT 'REFTOP'
  INTERFACE .9 0
  REDEFINE COLOR 20
RETURN

SURFACES
  PLANE X 0 RECT 50 2
    SHIFT 0 0 -2
    ROTATE Y -50 0 0
    SHIFT -3.1 0 -5
    SHIFT 0 0 -2
OBJECT 'REFBOT'
  INTERFACE .9 0
  REDEFINE COLOR 20
RETURN

!! Catcher that collects rays coming from the top of the lightguide
SURFACES
  PLANE Z .1 RECT 50
    SHIFT 50 0 0
OBJECT 'CATCHER'
  REDEFINE COLOR 3
RETURN

!! Define a line of nine LED sources
$DO 0 80 10
{

!! Dome
SURFACES
  PLANE Z 0 
  ELLIPSOID 3@1.3, 3@0
OBJECT 'DOME.?'
  BOUNDS .2
  SHIFT 0 (?-40) 0
  INTERFACE COAT +BARE AIR EPOXY
  REDEFINE COLOR 3
RETURN

!! Base top
SURFACES
  PLANE Z 0 RECT 3 1.8
    SHIFT .6 0 0
OBJECT 'BASE.TOP.?'
  SHIFT 0 (?-40) 0
  REDEFINE COLOR 1
RETURN

!! Base bottom
SURFACES
  PLANE Z -.6 RECT 3 1.8
    SHIFT .6 0 0
OBJECT 'BASE.BOT.?'
  SHIFT 0 (?-40) 0
  REDEFINE COLOR 1
RETURN

!! Base edge
EDGES
  RECTANGLE Z -.6 3 1.8
    SHIFT .6 0 0
  RECTANGLE Z 0 3 1.8
    SHIFT .6 0 0
OBJECT;.1 .2 'BASE.EDGE.?'
  SHIFT 0 (?-40) 0
  REDEFINE COLOR 1
RETURN

!! Create rays for this LED and set the total
!! power of all rays to 1.
IMMERSE EPOXY
EMITTING RECT Z .1 2@.5 (NRAYS)
  SHIFT 0 (?-40) 0
  FLUX TOTAL 1 SOU .1
  }

!! Shift the LED objects to the entrance face of the backlight
GROUP DOME.? BASE.TOP.? BASE.BOT.? BASE.EDGE.?
  ROTATE Y 90 0 0
  SHIFT -3.1 0 -5
RETURN

!! Shift the rays to the entrance face of the backlight
RAYSET
  ROTATE Y 90 0 0
  SHIFT -3.1 0 -5
RETURN


!! Restart the clock that times the ray trace
$TIC

!! Trace rays
SPLIT 1		  !! Allow one generation of Fresnel reflections
FRESNEL AVE	!! Reflectance is average of S and P polarization
TRACE

!! Print out the time required for the ray trace
$TIC

!! Turn off all objects except the catcher that collected
!! rays that came from the top of the lightguide
CONSIDER ONLY CATCHER

!! Calculate and plot the irradiance on the catcher
WINDOW Y -50 50 X 0 100			      !! Window dimensions for the calculation
PIXEL 101				                  !! Resolution of the calculation
SPOTS POSITION ATTRIBUTE 0			  !! Calculate irradiance and write data to a display file
DISPLAY					                  !! Read the display file into memory
  PICTURE 'BACKLIGHT IRRADIANCE'	!! Plot the irradiance
